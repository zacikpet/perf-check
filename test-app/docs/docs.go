// Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/": {
            "get": {
                "summary": "Hello",
                "responses": {},
                "x-perf-check": {
                    "errorRate": 0.1,
                    "latency": 100
                }
            }
        },
        "/param/{x}": {
            "get": {
                "summary": "Example param",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "X param",
                        "name": "x",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {},
                "x-perf-check": {
                    "errorRate": 0.1,
                    "latency": 100,
                    "params": {
                        "path": {
                            "x": {
                                "examples": [
                                    "abc",
                                    "def"
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/pattern/{x}/{y}": {
            "get": {
                "summary": "Pattern param",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "X param",
                        "name": "x",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {},
                "x-perf-check": {
                    "errorRate": 0.1,
                    "latency": 100,
                    "params": {
                        "path": {
                            "x": {
                                "pattern": "uuid"
                            },
                            "y": {
                                "pattern": "string(8)"
                            }
                        }
                    }
                }
            }
        },
        "/range/{x}": {
            "get": {
                "summary": "Range param",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "X param",
                        "name": "x",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {},
                "x-perf-check": {
                    "errorRate": 0.1,
                    "latency": 100,
                    "params": {
                        "path": {
                            "x": {
                                "range": {
                                    "max": 1000,
                                    "min": 0
                                }
                            }
                        }
                    }
                }
            }
        },
        "/sleep": {
            "get": {
                "summary": "Sleep for n seconds",
                "responses": {},
                "x-perf-check": {
                    "errorRate": 0.2,
                    "latency": 250,
                    "params": {
                        "query": {
                            "seconds": {
                                "examples": [
                                    1
                                ]
                            }
                        }
                    }
                }
            }
        }
    },
    "x-perf-check": {
        "stages": [
            {
                "duration": "10s",
                "target": 5
            }
        ]
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{"http"},
	Title:            "Example API",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
